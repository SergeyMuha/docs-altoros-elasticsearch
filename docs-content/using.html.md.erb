---
title: Using Altoros Elasticsearch for VMware Tanzu
owner: Partners
---

This topic describes how to use Altoros Elasticsearch for VMware Tanzu  after it has been installed.

##<a id='using'></a> Use Altoros Elasticsearch for VMware Tanzu with applications

Follow the procedures below to create and bind a service instance to your applications.

### <a id="list"></a>View the Service

Once the tile has been installed, `a-elasticsearch` and its service plans appear in your Marketplace. Run the `cf marketplace` command to see the service listing.

<pre class="terminal">
$ cf marketplace
Getting services from marketplace in org admin / space dev as admin...
OK

service           plans     description
a-elasticsearch   default   Shared Elasticsearch Cluster
</pre>

### <a id="create"></a> Create a Service Instance

Use the `cf create-service` command to provision a keyspace.

<pre class="terminal">
$ cf create-service a-elasticsearch default elasticsearch
</pre>

Check the service creation status using the `cf services` command. It displays the list of all your service instances. To check the status of any specific service instance, run `cf service a-elasticsearch`.

### <a id="bind"></a>Bind the Service Instance to an App

After you have created your keyspace, run the `cf bind-service` command to bind the service to your app.

<pre class="terminal">
$ cf bind-service sample-app elasticsearch
</pre>

### <a id="restart"></a>Restage or Restart Your App

To enable access to the service instance, run `cf restage` or `cf restart` to restage or restart your app.

### <a id="obtain"></a>Obtain the Service Instance Access Credentials

After you have bound your service instance to your app, you can find the credentials of your Elasticsearch user in the environment variables of the app.

Run `cf env APP-NAME` to display environment variables. The credentials are listed under the <a href="https://docs.pivotal.io/pivotalcf/devguide/deploy-apps/environment-variable.html#VCAP-SERVICES" target="_blank">VCAP_SERVICES</a> key.

<pre class="terminal">
$ cf env sample-app
Getting env variables for app sample-app in org system / space test as admin...
OK

System-Provided:
{
  "VCAP_SERVICES": {
   "a-elasticsearch": [
    {
     "binding_name": null,
     "credentials": {
      "host": "http://master.elasticsearch.internal:9200",
      "host_ip": [
       "http://10.100.2.39:9200"
      ],
      "host_ips": [
       "10.100.2.41",
       "10.100.2.42",
       "10.100.2.39",
       "10.100.2.44"
      ],
      "index": "zkrdxiaqzxem",
      "password": "vkmmbsowhyiech",
      "port": 9200,
      "scheme": "http",
      "username": "dmyelobc"
     },
     "instance_name": "index",
     "label": "a-elasticsearch",
     "name": "index1",
     "plan": "default",
     "provider": null,
     "syslog_drain_url": null,
     "tags": [
      "elasticsearch",
      "logs"
     ],
     "volume_mounts": []
   }
  ]
 }
}
...
</pre>

You can use these parameters to connect to Elasticsearch.

##<a id='deleting'></a> Delete an Altoros Elasticsearch for VMware Tanzu Service Instance

<p class="note warning"><strong>WARNING!</strong> Before deleting a service instance, you must back up data stored in your keyspace. This operation cannot be undone, and all the data is lost when the service is deleted.</p>

Follow the instructions below to unbind your service instance from all apps and then delete it.

### <a id="list2"></a>List All Available Services

Run the `cf service` command to list available services.

<pre class="terminal">
$ cf services
Getting services in org system / space test as admin...
OK

name            service           plan      bound apps   last operation
elasticsearch   a-elasticsearch   default   sample-app   create succeeded
</pre>

This example shows that `elasticsearch` is bound to the `sample-app` app.

### <a id="unbind"></a>Unbind a Service Instance

Run `cf unbind` to disconnect the service from your app:

<pre class="terminal">
$ cf unbind-service sample-app elasticsearch
</pre>

### <a id="delete"></a>Delete a Service Instance

Run `cf delete-service` to remove the service.

<pre class="terminal">
  $ cf delete-service elasticsearch
</pre>

Run the `cf services` command to check the deletion status.
